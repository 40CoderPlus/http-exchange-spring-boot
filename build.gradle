import java.time.LocalDateTime
import java.time.format.DateTimeFormatter

buildscript {
    repositories {
        gradlePluginPortal()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }

    dependencies {
        classpath "org.springframework.boot:spring-boot-gradle-plugin:$sbVersion"
        classpath "io.spring.gradle:dependency-management-plugin:1.1.4"

        classpath "com.palantir.baseline:gradle-baseline-java:5.31.0"
        classpath "org.sonarsource.scanner.gradle:sonarqube-gradle-plugin:4.4.1.3373"
        classpath "com.diffplug.spotless:spotless-plugin-gradle:6.23.3"
        classpath 'org.owasp:dependency-check-gradle:9.0.2'

        classpath "gradle.plugin.net.nemerosa:versioning:3.0.0"
    }
}

subprojects {
    apply plugin: 'java'
    apply plugin: 'java-library'
    apply plugin: 'maven-publish'
    apply plugin: 'io.spring.dependency-management'
    apply plugin: 'idea'
    apply plugin: "net.nemerosa.versioning"

    repositories {
        mavenLocal()
        mavenCentral()
    }

    dependencyManagement {
        imports {
            mavenBom "org.springframework.boot:spring-boot-starter-parent:${sbVersion}"
        }
    }

    plugins.withType(JavaPlugin) {
        project.sourceCompatibility = JavaVersion.VERSION_17
    }
    tasks.withType(JavaCompile) {
        options.encoding = "UTF-8"
    }

    java {
        withSourcesJar()
    }
    test {
        useJUnitPlatform()
    }

    jar {
        manifest {
            attributes(
                    'Built-By': 'Codingendless',
                    'Build-Timestamp': DateTimeFormatter.ofPattern("yyyy-MM-dd HH:mm:ss").format(LocalDateTime.now()),
                    'Build-Revision': versioning.info.commit,
                    'Created-By': "Gradle ${gradle.gradleVersion}",
                    'Build-Jdk': "${System.properties['java.version']} (${System.properties['java.vendor']} ${System.properties['java.vm.version']})",
                    'Build-OS': "${System.properties['os.name']} ${System.properties['os.arch']} ${System.properties['os.version']}"
            )
        }
    }

    publishing {
        publications {
            mavenJava(MavenPublication) {
                groupId = project.group
                artifactId = project.name
                version = project.version

                from components.java

                pom {
                    name = "Http Exchange Spring Boot"
                    description = 'Http Exchange Spring Boot'
                    url = "${scmUrl}"
                    developers {
                        developer {
                            id = 'Codingendless'
                            name = 'Codingendless'
                            email = 'codingendless@40coderplus.com'
                        }
                    }
                    scm {
                        connection = "scm:git:${scmGit}"
                        url = "${scmUrl}"
                    }
                }
            }
        }
        repositories {
            maven {
                credentials {
                    username "$nexusUsername"
                    password "$nexusPassword"
                }
                url = version.endsWith('SNAPSHOT') ? "$nexusRelease" : "$nexusSnapshot"
                allowInsecureProtocol = !url.toString().startsWith("https://")
            }
        }
    }
}

apply from: 'baseline.gradle'
apply from: 'sonar.gradle'
